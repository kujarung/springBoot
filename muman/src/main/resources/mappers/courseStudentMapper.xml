<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="muscle.school.muman.course_student.dao.CourseStudentDao">
   	<insert id="insertStudent">
		INSERT INTO 
			COURSE_STUDENT 
		(
			course_student_seq, 
			member_seq, 
			start_date, 
			end_date, 
			times_week, 
			is_delay,
			alias_list_full_name,
			aliasList,

			price,
			price_type,
			price_date,
			payment_yn
		) 
		VALUES 
		(   IFNULL( (SELECT MAX(course_student_seq) + 1 FROM GENERATE_SEQ) , 1 )  ,
			#{memberSeq},
			#{startDate},
			#{endDate},
			#{timesWeek},
			0,
			#{aliasListFullName},
			#{aliasList},

			#{price},
			#{priceType},
			#{priceDate},
			#{paymentYn}
		);
	</insert>
    
    <select id="selectCourseStudentList" resultType="map">
    	SELECT TBL.*
		FROM 
		(
    	SELECT 
    		(SELECT COUNT(MEMBER_SEQ) FROM COURSE_STUDENT) TOTAL_CNT,
    		@ROWNUM:=@ROWNUM+1 AS NO,
    		M.NAME, M.MEMBER_SEQ, CS.START_DATE, CS.END_DATE, CS.TIMES_WEEK, CS.IS_DELAY, CS.ALIAS_LIST_FULL_NAME 
    		, PRICE, STR_TO_DATE(PRICE_DATE, '%Y-%m-%d') PRICE_DATE, PRICE_TYPE, M.BRANCH, PAYMENT_YN, CS.GRADE
    	FROM 
    		(SELECT @ROWNUM:= 0 ) dummy, COURSE_STUDENT CS
		LEFT JOIN 
			MEMBER M ON M.MEMBER_SEQ = CS.MEMBER_SEQ
		) TBL
		 WHERE 
		 	(@ROWNUM:=0)=0
		 AND
	 	    no BETWEEN ( ( ( #{currentPage} - 1 ) * 10 ) + 1 ) AND ( ( ( #{currentPage} - 1 ) * 10 ) + 10 )
    </select>
    
    <select id="selectCourseStudent" resultType="map">
    	SELECT 
    		* 
    	FROM 
    		COURSE_STUDENT CS
    	LEFT JOIN MEMBER M 
    		ON M.MEMBER_SEQ = CS.MEMBER_SEQ
    	WHERE 
    		M.MEMBER_SEQ = #{memberSeq}
    </select>
    
    <update id="updateDelay">
    	UPDATE COURSE_STUDENT SET
    		END_DATE = #{updateDay},
    		IS_DELAY = 1
    	WHERE 
    		MEMBER_SEQ = #{member_seq}
    </update>

	<update id="updateCourseStudent">
		update COURSE_STUDENT set
			end_date = #{endDate},
			times_week = #{timesWeek},
			is_delay = 0,
			alias_list_full_name = #{aliasListFullName},
			aliasList = #{aliasList},

			price = #{price},
			price_type = #{priceType},
			price_date = #{priceDate},
			payment_yn = #{paymentYn}
		where
			MEMBER_SEQ = #{memberSeq}
	</update>

	<update id="updateDealy">
		update COURSE_STUDENT set
			delay_date = #{delayDate},
			IS_DELAY = 1
		where
			MEMBER_SEQ = #{memberSeq}
	</update>
</mapper>
